import { TokenTag } from "@zig-devkit/lib";

export const TokenToScopeMap: Record<TokenTag, string> = {
  [TokenTag.Invalid]: "invalid",
  [TokenTag.InvalidPeriodasterisks]: "invalid",
  [TokenTag.Identifier]: "variable",
  [TokenTag.StringLiteral]: "string",
  [TokenTag.MultilineStringLiteralLine]: "string",
  [TokenTag.CharLiteral]: "string",
  [TokenTag.Eof]: "invalid",
  [TokenTag.Builtin]: "support.function",
  [TokenTag.Bang]: "keyword.operator.logical",
  [TokenTag.Pipe]: "keyword.operator.bitwise",
  [TokenTag.PipePipe]: "keyword.operator.logical",
  [TokenTag.PipeEqual]: "keyword.operator.assignment",
  [TokenTag.Equal]: "keyword.operator.assignment",
  [TokenTag.EqualEqual]: "keyword.operator.comparison",
  [TokenTag.EqualAngleBracketRight]: "keyword.operator.assignment",
  [TokenTag.BangEqual]: "keyword.operator.comparison",
  [TokenTag.LParen]: "punctuation.section.parens.begin",
  [TokenTag.RParen]: "punctuation.section.parens.end",
  [TokenTag.Semicolon]: "punctuation.terminator",
  [TokenTag.Percent]: "keyword.operator.arithmetic",
  [TokenTag.PercentEqual]: "keyword.operator.assignment",
  [TokenTag.LBrace]: "punctuation.section.braces.begin",
  [TokenTag.RBrace]: "punctuation.section.braces.end",
  [TokenTag.LBracket]: "punctuation.section.brackets.begin",
  [TokenTag.RBracket]: "punctuation.section.brackets.end",
  [TokenTag.Period]: "punctuation.accessor",
  [TokenTag.PeriodAsterisk]: "punctuation.accessor",
  [TokenTag.Ellipsis2]: "punctuation.definition.range",
  [TokenTag.Ellipsis3]: "punctuation.definition.range",
  [TokenTag.Caret]: "keyword.operator.bitwise",
  [TokenTag.CaretEqual]: "keyword.operator.assignment",
  [TokenTag.Plus]: "keyword.operator.arithmetic",
  [TokenTag.PlusPlus]: "keyword.operator.increment",
  [TokenTag.PlusEqual]: "keyword.operator.assignment",
  [TokenTag.PlusPercent]: "keyword.operator.arithmetic",
  [TokenTag.PlusPercentEqual]: "keyword.operator.assignment",
  [TokenTag.PlusPipe]: "keyword.operator.bitwise",
  [TokenTag.PlusPipeEqual]: "keyword.operator.assignment",
  [TokenTag.Minus]: "keyword.operator.arithmetic",
  [TokenTag.MinusEqual]: "keyword.operator.assignment",
  [TokenTag.MinusPercent]: "keyword.operator.arithmetic",
  [TokenTag.MinusPercentEqual]: "keyword.operator.assignment",
  [TokenTag.MinusPipe]: "keyword.operator.bitwise",
  [TokenTag.MinusPipeEqual]: "keyword.operator.assignment",
  [TokenTag.Asterisk]: "keyword.operator.arithmetic",
  [TokenTag.AsteriskEqual]: "keyword.operator.assignment",
  [TokenTag.AsteriskAsterisk]: "keyword.operator.exponent",
  [TokenTag.AsteriskPercent]: "keyword.operator.arithmetic",
  [TokenTag.AsteriskPercentEqual]: "keyword.operator.assignment",
  [TokenTag.AsteriskPipe]: "keyword.operator.bitwise",
  [TokenTag.AsteriskPipeEqual]: "keyword.operator.assignment",
  [TokenTag.Arrow]: "keyword.operator.arrow",
  [TokenTag.Colon]: "punctuation.separator.key-value",
  [TokenTag.Slash]: "keyword.operator.arithmetic",
  [TokenTag.SlashEqual]: "keyword.operator.assignment",
  [TokenTag.Comma]: "punctuation.separator",
  [TokenTag.Ampersand]: "keyword.operator.bitwise",
  [TokenTag.AmpersandEqual]: "keyword.operator.assignment",
  [TokenTag.QuestionMark]: "punctuation.definition.ternary",
  [TokenTag.AngleBracketLeft]: "keyword.operator.comparison",
  [TokenTag.AngleBracketLeftEqual]: "keyword.operator.comparison",
  [TokenTag.AngleBracketAngleBracketLeft]: "keyword.operator.shift",
  [TokenTag.AngleBracketAngleBracketLeftEqual]: "keyword.operator.assignment",
  [TokenTag.AngleBracketAngleBracketLeftPipe]: "keyword.operator.bitwise",
  [TokenTag.AngleBracketAngleBracketLeftPipeEqual]:
    "keyword.operator.assignment",
  [TokenTag.AngleBracketRight]: "keyword.operator.comparison",
  [TokenTag.AngleBracketRightEqual]: "keyword.operator.comparison",
  [TokenTag.AngleBracketAngleBracketRight]: "keyword.operator.shift",
  [TokenTag.AngleBracketAngleBracketRightEqual]: "keyword.operator.assignment",
  [TokenTag.Tilde]: "keyword.operator.bitwise",
  [TokenTag.NumberLiteral]: "constant.numeric",
  [TokenTag.DocComment]: "comment.documentation",
  [TokenTag.ContainerDocComment]: "comment.documentation",
  [TokenTag.KeywordAddrspace]: "keyword",
  [TokenTag.KeywordAlign]: "keyword",
  [TokenTag.KeywordAllowzero]: "keyword",
  [TokenTag.KeywordAnd]: "keyword.operator.logical",
  [TokenTag.KeywordAnyframe]: "keyword",
  [TokenTag.KeywordAnytype]: "keyword",
  [TokenTag.KeywordAsm]: "keyword",
  [TokenTag.KeywordAsync]: "keyword",
  [TokenTag.KeywordAwait]: "keyword",
  [TokenTag.KeywordBreak]: "keyword.control",
  [TokenTag.KeywordCallconv]: "keyword",
  [TokenTag.KeywordCatch]: "keyword.control",
  [TokenTag.KeywordComptime]: "keyword",
  [TokenTag.KeywordConst]: "storage.modifier",
  [TokenTag.KeywordContinue]: "keyword.control",
  [TokenTag.KeywordDefer]: "keyword.control",
  [TokenTag.KeywordElse]: "keyword.control",
  [TokenTag.KeywordEnum]: "keyword",
  [TokenTag.KeywordErrdefer]: "keyword.control",
  [TokenTag.KeywordError]: "keyword",
  [TokenTag.KeywordExport]: "storage.modifier",
  [TokenTag.KeywordExtern]: "storage.modifier",
  [TokenTag.KeywordFn]: "keyword",
  [TokenTag.KeywordFor]: "keyword.control",
  [TokenTag.KeywordIf]: "keyword.control",
  [TokenTag.KeywordInline]: "keyword",
  [TokenTag.KeywordNoalias]: "keyword",
  [TokenTag.KeywordNoinline]: "keyword",
  [TokenTag.KeywordNosuspend]: "keyword",
  [TokenTag.KeywordOpaque]: "keyword",
  [TokenTag.KeywordOr]: "keyword.operator.logical",
  [TokenTag.KeywordOrelse]: "keyword.control",
  [TokenTag.KeywordPacked]: "keyword",
  [TokenTag.KeywordPub]: "storage.modifier",
  [TokenTag.KeywordResume]: "keyword.control",
  [TokenTag.KeywordReturn]: "keyword.control",
  [TokenTag.KeywordLinksection]: "keyword",
  [TokenTag.KeywordStruct]: "keyword",
  [TokenTag.KeywordSuspend]: "keyword.control",
  [TokenTag.KeywordSwitch]: "keyword.control",
  [TokenTag.KeywordTest]: "keyword",
  [TokenTag.KeywordThreadlocal]: "keyword",
  [TokenTag.KeywordTry]: "keyword.control",
  [TokenTag.KeywordUnion]: "keyword",
  [TokenTag.KeywordUnreachable]: "keyword.control",
  [TokenTag.KeywordUsingnamespace]: "keyword",
  [TokenTag.KeywordVar]: "storage.type",
  [TokenTag.KeywordVolatile]: "keyword",
  [TokenTag.KeywordWhile]: "keyword.control",
};
